"""Updating database models

Revision ID: b6000a14e499
Revises: ea2bbf40e3f9
Create Date: 2024-12-05 16:44:38.265227

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b6000a14e499'
down_revision = 'ea2bbf40e3f9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('activity_post')
    op.drop_table('activities')
    op.drop_table('island_post')
    op.drop_table('localexpert_island')
    op.drop_table('traveler_island')
    op.drop_table('traveler_activity')
    op.drop_table('localexpert_activity')
    op.drop_table('island_activity')
    op.drop_table('advertiser_island')
    op.drop_table('advertiser_activity')
    op.drop_table('islands')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('traveler_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('localexpert_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('advertiser_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('advertiser_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('localexpert_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('traveler_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('islands',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('advertiser_activity',
    sa.Column('advertiser_id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], name='fk_advertiser_activity_activity_id_activities'),
    sa.ForeignKeyConstraint(['advertiser_id'], ['advertisers.id'], name='fk_advertiser_activity_advertiser_id_advertisers'),
    sa.PrimaryKeyConstraint('advertiser_id', 'activity_id')
    )
    op.create_table('advertiser_island',
    sa.Column('advertiser_id', sa.INTEGER(), nullable=False),
    sa.Column('island_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['advertiser_id'], ['advertisers.id'], name='fk_advertiser_island_advertiser_id_advertisers'),
    sa.ForeignKeyConstraint(['island_id'], ['islands.id'], name='fk_advertiser_island_island_id_islands'),
    sa.PrimaryKeyConstraint('advertiser_id', 'island_id')
    )
    op.create_table('island_activity',
    sa.Column('island_id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], name='fk_island_activity_activity_id_activities'),
    sa.ForeignKeyConstraint(['island_id'], ['islands.id'], name='fk_island_activity_island_id_islands'),
    sa.PrimaryKeyConstraint('island_id', 'activity_id')
    )
    op.create_table('localexpert_activity',
    sa.Column('localexpert_id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], name='fk_localexpert_activity_activity_id_activities'),
    sa.ForeignKeyConstraint(['localexpert_id'], ['localexperts.id'], name='fk_localexpert_activity_localexpert_id_localexperts'),
    sa.PrimaryKeyConstraint('localexpert_id', 'activity_id')
    )
    op.create_table('traveler_activity',
    sa.Column('traveler_id', sa.INTEGER(), nullable=False),
    sa.Column('activity_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], name='fk_traveler_activity_activity_id_activities'),
    sa.ForeignKeyConstraint(['traveler_id'], ['travelers.id'], name='fk_traveler_activity_traveler_id_travelers'),
    sa.PrimaryKeyConstraint('traveler_id', 'activity_id')
    )
    op.create_table('traveler_island',
    sa.Column('traveler_id', sa.INTEGER(), nullable=False),
    sa.Column('island_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['island_id'], ['islands.id'], name='fk_traveler_island_island_id_islands'),
    sa.ForeignKeyConstraint(['traveler_id'], ['travelers.id'], name='fk_traveler_island_traveler_id_travelers'),
    sa.PrimaryKeyConstraint('traveler_id', 'island_id')
    )
    op.create_table('localexpert_island',
    sa.Column('localexpert_id', sa.INTEGER(), nullable=False),
    sa.Column('island_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['island_id'], ['islands.id'], name='fk_localexpert_island_island_id_islands'),
    sa.ForeignKeyConstraint(['localexpert_id'], ['localexperts.id'], name='fk_localexpert_island_localexpert_id_localexperts'),
    sa.PrimaryKeyConstraint('localexpert_id', 'island_id')
    )
    op.create_table('island_post',
    sa.Column('island_id', sa.INTEGER(), nullable=False),
    sa.Column('post_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['island_id'], ['islands.id'], name='fk_island_post_island_id_islands'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='fk_island_post_post_id_posts'),
    sa.PrimaryKeyConstraint('island_id', 'post_id')
    )
    op.create_table('activities',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('price', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_post',
    sa.Column('activity_id', sa.INTEGER(), nullable=False),
    sa.Column('post_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], name='fk_activity_post_activity_id_activities'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='fk_activity_post_post_id_posts'),
    sa.PrimaryKeyConstraint('activity_id', 'post_id')
    )
    # ### end Alembic commands ###
